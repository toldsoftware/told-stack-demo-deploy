{"version":3,"sources":["webpack:///webpack/bootstrap 0376b834b1a85d2e7d8a?424d***","webpack:///C:/Projects/told-stack/told-stack-npm/src/data-patterns/lookup-lsc/src-config/config.ts?03cb***","webpack:///./config/config-test-blob.ts?3e91*","webpack:///./src/obtain-test-blob-data.ts?1838*","webpack:///C:/Projects/told-stack/told-stack-npm/src/data-patterns/lookup-lsc/src-server/function-01-http.ts","webpack:///./_intermediate/entries/test-blob-lookup-lsc-01-http.ts"],"names":[],"mappings":"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","file":"./_deploy/test-blob-lookup-lsc-01-http/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 266);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0376b834b1a85d2e7d8a","import { HttpFunctionRequest } from \"../../../core/types/functions\";\r\n\r\nexport interface DataKey {\r\n    containerName: string;\r\n    blobName: string;\r\n}\r\n\r\nexport interface LookupTable {\r\n    timeKey: string\r\n};\r\n\r\nexport interface DataAccessConfig {\r\n    timePollSeconds: number;\r\n    maxPollCount: number;\r\n\r\n    getLookupUrl(key: DataKey): string;\r\n    getDataDownloadUrl(key: DataKey, lookup: LookupTable): string;\r\n}\r\n\r\nexport interface ChangeTable {\r\n    changeTime: number;\r\n}\r\n\r\nexport interface DataUpdateConfig {\r\n    timeToLiveSeconds: number;\r\n    timeExtendSeconds: number;\r\n    timeExecutionSeconds: number;\r\n    timePollSeconds: number;\r\n\r\n    getLookupBlobName(blobName: string): string;\r\n    getDataDownloadBlobName(blobName: string, lookup: LookupTable): string;\r\n\r\n    getKeyFromRequest(req: HttpFunctionRequest, bindingData: HttpFunction_BindingData): DataKey;\r\n\r\n    getChangeTableRowKey_fromQueueTrigger(queueTrigger: UpdateRequestQueueMessage): { table: string, partition: string, row: string };\r\n    getLookupTableRowKey_fromQueueTrigger(queueTrigger: UpdateRequestQueueMessage): { table: string, partition: string, row: string };\r\n}\r\n\r\nexport interface HttpFunction_BindingData {\r\n    container: string;\r\n    blob: string;\r\n}\r\n\r\nexport interface DataUpdateBlobConfig<T> extends DataUpdateConfig {\r\n    obtainBlobData(oldBlob: T, key: DataKey): Promise<T>;\r\n}\r\n\r\nexport interface FunctionTemplateConfig {\r\n    http_route: string;\r\n\r\n    lookupTable_connection: string;\r\n    lookupTable_tableName: string;\r\n    lookupTable_partitionKey: string;\r\n    lookupTable_rowKey: string;\r\n    lookupTable_tableName_fromQueueTrigger: string;\r\n    lookupTable_partitionKey_fromQueueTrigger: string;\r\n    lookupTable_rowKey_fromQueueTrigger: string;\r\n\r\n    updateRequestQueue_connection: string;\r\n    updateRequestQueue_queueName: string;\r\n\r\n    updateExecuteQueue_connection: string;\r\n    updateExecuteQueue_queueName: string;\r\n\r\n    changeTable_connection: string;\r\n    changeTable_tableName: string;\r\n    changeTable_partitionKey: string;\r\n    changeTable_rowKey: string;\r\n    changeTable_tableName_fromQueueTrigger: string;\r\n    changeTable_partitionKey_fromQueueTrigger: string;\r\n    changeTable_rowKey_fromQueueTrigger: string;\r\n\r\n    dataRawBlob_connection: string;\r\n    dataRawBlob_path_fromQueueTrigger: string;\r\n\r\n    dataDownloadBlob_connection: string;\r\n    dataDownloadBlob_path_fromQueueTriggerDate: string;\r\n}\r\n\r\nexport interface UpdateRequestQueueMessage extends DataKey {\r\n    timeKey: string;\r\n}\r\n\r\nexport class Config<T> implements DataAccessConfig, DataUpdateConfig, FunctionTemplateConfig {\r\n    timeToLiveSeconds = 60;\r\n    timeExtendSeconds = 1;\r\n    timeExecutionSeconds = 10;\r\n\r\n    timePollSeconds = 1;\r\n    maxPollCount = 5;\r\n\r\n    domain = '/';\r\n    blobProxyRoutePath = 'blob';\r\n\r\n    updateRequestQueue_connection = this.default_storageConnectionString_AppSettingName;\r\n    updateExecuteQueue_connection = this.default_storageConnectionString_AppSettingName;\r\n    lookupTable_connection = this.default_storageConnectionString_AppSettingName;\r\n    changeTable_connection = this.default_storageConnectionString_AppSettingName;\r\n    dataRawBlob_connection = this.default_storageConnectionString_AppSettingName;\r\n    dataDownloadBlob_connection = this.default_storageConnectionString_AppSettingName;\r\n\r\n    constructor(\r\n        public obtainBlobData: (oldBlob: T, key: DataKey) => Promise<T>,\r\n        private apiRoutePath = 'api/lookup-lsc',\r\n        public default_storageConnectionString_AppSettingName = 'AZURE_STORAGE_CONNECTION_STRING'\r\n    ) { }\r\n\r\n    // Function Template\r\n\r\n    // Slash in blobName is not supported (i.e. {*blob}) because table partitionKey/rowKey cannot / in the name\r\n    // http_route = this.apiRoutePath + '/{container}/{*blob}';\r\n    http_route = this.apiRoutePath + '/{container}/{blob}';\r\n    getKeyFromRequest(req: HttpFunctionRequest, bindingData: HttpFunction_BindingData): DataKey {\r\n        const d = bindingData;\r\n\r\n        return {\r\n            containerName: d.container,\r\n            blobName: d.blob,\r\n        };\r\n    }\r\n\r\n    updateRequestQueue_queueName = 'lookup-lsc-update-request-queue';\r\n    updateExecuteQueue_queueName = 'lookup-lsc-update-execute-queue';\r\n    // These will encode to a url that receives parametes\r\n    // Example: '{container}/{blob}/_lookup.txt'\r\n\r\n    lookupTable_tableName = `blobaccess`;\r\n    lookupTable_partitionKey = `{container}_{blob}`;\r\n    lookupTable_rowKey = `lookup`;\r\n\r\n    lookupTable_tableName_fromQueueTrigger = `blobaccess`;\r\n    lookupTable_partitionKey_fromQueueTrigger = `{containerName}_{blobName}`;\r\n    lookupTable_rowKey_fromQueueTrigger = `lookup`;\r\n\r\n    getLookupTableRowKey_fromQueueTrigger(queueTrigger: UpdateRequestQueueMessage) {\r\n        return {\r\n            table: this.lookupTable_tableName_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n            partition: this.lookupTable_partitionKey_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n            row: this.lookupTable_rowKey_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n        };\r\n    }\r\n\r\n    changeTable_tableName = `blobaccess`;\r\n    changeTable_partitionKey = `{container}_{blob}`;\r\n    changeTable_rowKey = `change`;\r\n\r\n    changeTable_tableName_fromQueueTrigger = `blobaccess`;\r\n    changeTable_partitionKey_fromQueueTrigger = `{containerName}_{blobName}`;\r\n    changeTable_rowKey_fromQueueTrigger = `change`;\r\n\r\n    getChangeTableRowKey_fromQueueTrigger(queueTrigger: UpdateRequestQueueMessage) {\r\n        return {\r\n            table: this.changeTable_tableName_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n            partition: this.changeTable_partitionKey_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n            row: this.changeTable_rowKey_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n        };\r\n    }\r\n\r\n    dataRawBlob_path_fromQueueTrigger = `{containerName}/{blobName}`;\r\n    dataDownloadBlob_path_fromQueueTriggerDate = `{containerName}/{blobName}/{timeKey}.gzip`;\r\n\r\n    getLookupUrl(key: DataKey): string {\r\n        return `${this.domain}/${this.apiRoutePath}/${key.containerName}/${key.blobName}`;\r\n    }\r\n\r\n    getDataDownloadUrl(key: DataKey, lookup: LookupTable): string {\r\n        return `${this.domain}/${this.blobProxyRoutePath}/${key.containerName}/${this.getDataDownloadBlobName(key.blobName, lookup)}`;\r\n    }\r\n\r\n    getLookupBlobName(blobName: string) {\r\n        return `${blobName}/_lookup.txt`;\r\n    }\r\n\r\n    getDataDownloadBlobName(blobName: string, lookup: LookupTable) {\r\n        // TODO: Test if works with .ext and switch to underscore if needed\r\n        return `${blobName}/${lookup.timeKey}.gzip`;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/told-stack/told-stack-npm/src/data-patterns/lookup-lsc/src-config/config.ts","import { Config } from \"@told/stack/lib/data-patterns/lookup-lsc/src-config/config\";\r\nimport { obtainTestBlobData } from \"../src/obtain-test-blob-data\";\r\n\r\nexport const config = new Config(obtainTestBlobData, 'api/test-blob');\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./config/config-test-blob.ts","import { DataKey } from \"@told/stack/lib/data-patterns/lookup-lsc/src-config/config\";\r\n\r\nexport interface TestBlob {\r\n    data: {\r\n        key: DataKey;\r\n        time: Date;\r\n        oldBlob: TestBlob;\r\n    }\r\n}\r\n\r\nexport async function obtainTestBlobData(oldBlob: TestBlob, key: DataKey) {\r\n    return {\r\n        data: {\r\n            key,\r\n            time: new Date(),\r\n            oldBlob\r\n        }\r\n    } as TestBlob;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/obtain-test-blob-data.ts","import { DataUpdateConfig, DataKey, FunctionTemplateConfig, UpdateRequestQueueMessage, ChangeTable, LookupTable, HttpFunction_BindingData } from \"../src-config/config\";\r\nimport { HttpFunctionResponse, HttpFunctionRequest } from \"../../../core/types/functions\";\r\nimport { readBlob } from \"../../../core/utils/azure-storage-sdk/blobs\";\r\n\r\n// Http Request: Handle Update Request\r\n// Table In: Read Old Lookup Blob Value\r\n// Queue Out: Update Request Queue\r\n// Http Response: Return Old Lookup Value with Short TTL\r\n\r\nexport function createFunctionJson(config: FunctionTemplateConfig) {\r\n    return {\r\n        bindings: [\r\n            {\r\n                name: \"req\",\r\n                type: \"httpTrigger\",\r\n                direction: \"in\",\r\n                authLevel: \"anonymous\",\r\n                route: config.http_route\r\n            },\r\n            {\r\n                name: \"res\",\r\n                type: \"http\",\r\n                direction: \"out\"\r\n            },\r\n            {\r\n                name: \"inLookupTable\",\r\n                type: \"table\",\r\n                direction: \"in\",\r\n                tableName: config.lookupTable_tableName,\r\n                partitionKey: config.lookupTable_partitionKey,\r\n                rowKey: config.lookupTable_rowKey,\r\n                connection: config.lookupTable_connection\r\n            },\r\n            {\r\n                name: \"outUpdateRequestQueue\",\r\n                type: \"queue\",\r\n                direction: \"out\",\r\n                queueName: config.updateRequestQueue_queueName,\r\n                connection: config.updateRequestQueue_connection\r\n            },\r\n        ],\r\n        disabled: false\r\n    };\r\n}\r\n\r\nexport async function runFunction(config: DataUpdateConfig, context: {\r\n    log: typeof console.log,\r\n    done: () => void,\r\n    res: HttpFunctionResponse,\r\n    bindingData: HttpFunction_BindingData,\r\n    bindings: {\r\n        inLookupTable: LookupTable,\r\n        outUpdateRequestQueue: UpdateRequestQueueMessage,\r\n    }\r\n}, req: HttpFunctionRequest) {\r\n    context.log('START');\r\n\r\n    const dataKey = config.getKeyFromRequest(req, context.bindingData);\r\n    const lookup = context.bindings.inLookupTable;\r\n\r\n    context.log('Lookup', { lookup });\r\n\r\n    // If the blob value is not stale\r\n    // Return Current Blob Value with Long TTL\r\n    const remainingTtl = lookup && lookup.timeKey\r\n        && Math.ceil((parseInt(lookup.timeKey) + config.timeToLiveSeconds * 1000 - Date.now()) / 1000);\r\n\r\n    context.log('remainingTtl', { remainingTtl, timeKey: lookup, timeToLiveSeconds: config.timeToLiveSeconds, now: Date.now() });\r\n\r\n    if (remainingTtl > config.timeExtendSeconds) {\r\n\r\n        context.log('Return Old Lookup', { lookup, remainingTtl });\r\n\r\n        // Return Old Lookup (Long TTL)\r\n        context.res = {\r\n            body: lookup,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': `public, max-age=${remainingTtl}`\r\n            }\r\n        };\r\n\r\n        context.log('DONE');\r\n        context.done();\r\n        return;\r\n    }\r\n\r\n    context.log('Request Update');\r\n\r\n    // Set Update Request Queue\r\n    context.bindings.outUpdateRequestQueue = { ...dataKey, timeKey: '' + Date.now() };\r\n\r\n    // Return Current Blob Value with Short TTL\r\n\r\n    if (!lookup) {\r\n\r\n        context.log('Missing Lookup (First Time?)');\r\n\r\n        context.res = {\r\n            body: { error: `Not Ready Yet: Try again in ${config.timePollSeconds} Seconds` },\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': `public, max-age=${config.timeExtendSeconds}`,\r\n            }\r\n        };\r\n\r\n        // context.res = {\r\n        //     status: 400,\r\n        //     body: `Not Ready Yet: Try again in ${config.timePollSeconds} Seconds`,\r\n        //     headers: {\r\n        //         'Cache-Control': `public, max-age=${config.timeExtendSeconds}`\r\n        //     }\r\n        // };\r\n\r\n        context.log('DONE');\r\n        context.done();\r\n        return;\r\n    }\r\n\r\n    // Return Old Lookup (Short)\r\n    context.log('Return Old Lookup with Short TTL while Getting New Lookup and Value');\r\n\r\n    context.res = {\r\n        body: lookup,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Cache-Control': `public, max-age=${config.timeExtendSeconds}`,\r\n        }\r\n    };\r\n\r\n    context.log('DONE');\r\n    context.done();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/told-stack/told-stack-npm/src/data-patterns/lookup-lsc/src-server/function-01-http.ts","\nimport { runFunction } from '@told/stack/lib/data-patterns/lookup-lsc/src-server/function-01-http';\nimport { config } from '../../config/config-test-blob';\n\nconst run = function (...args: any[]) {\n    runFunction.apply(null, [config, ...args]);\n};\n\ndeclare const global: any;\nglobal.__run = run;\nmodule.exports = global.__run;\n\n\n\n// WEBPACK FOOTER //\n// ./_intermediate/entries/test-blob-lookup-lsc-01-http.ts"],"sourceRoot":""}