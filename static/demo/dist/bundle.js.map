{"version":3,"sources":["webpack:///./src/app/app.tsx","webpack:///./../config/src/core/logger-client.ts","webpack:///./../config/src/lookup-lsc/client.ts","webpack:///./../config/src/payment/stripe-client.ts","webpack:///./src/app/components/stripe-test.tsx","webpack:///./src/app/server-access/logger.ts","webpack:///./src/app/server-access/stripe.ts","webpack:///./src/index.tsx","webpack:///./../../../told-stack-npm/src/core/account/session-id.ts","webpack:///./../../../told-stack-npm/src/core/logger/client/logger.ts","webpack:///./../../../told-stack-npm/src/core/logger/config/client-config.ts","webpack:///./../../../told-stack-npm/src/core/utils/instance-loader.ts","webpack:///./../../../told-stack-npm/src/core/utils/observable.ts","webpack:///./../../../told-stack-npm/src/core/utils/rand.ts","webpack:///./../../../told-stack-npm/src/core/utils/script-loader.ts","webpack:///./../../../told-stack-npm/src/core/utils/uuid.ts","webpack:///./../../../told-stack-npm/src/data-patterns/lookup-lsc/src-config/client-config.ts","webpack:///./../../../told-stack-npm/src/payment/common/checkout-types.ts","webpack:///./../../../told-stack-npm/src/payment/stripe/client/checkout-process.ts","webpack:///./../../../told-stack-npm/src/payment/stripe/client/stripe-checkout-access.ts","webpack:///./../../../told-stack-npm/src/payment/stripe/config/client-config.ts","webpack:///./../../../told-stack-npm/src/core/utils/objects.ts","webpack:///./src/config.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["import * as RX from 'reactxp';\r\nimport { LookupLscTest } from \"./components/lookup-lsc-test\";\r\nimport { LoggerTest } from \"./components/logger-test\";\r\nimport { StripeTest } from \"./components/stripe-test\";\r\n// import { Store } from './store/store';\r\n// import { handleRoute } from \"./routes\";\r\n// import { Root } from \"./components/page/root\";\r\n\r\n// const store = Store;\r\n\r\n// handleRoute();\r\n\r\n// <Root store={store} />\r\nexport const App = () => (\r\n    <RX.View>\r\n        <RX.Text>TEST</RX.Text>\r\n        {/*<LookupLscTest />*/}\r\n        {/*<LoggerTest />*/}\r\n        <StripeTest />\r\n    </RX.View>\r\n);\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.tsx","import { ClientConfig } from \"@told/stack/src/core/logger/config/client-config\";\r\n\r\nexport const clientConfig = new ClientConfig({\r\n    timeBatchSeconds: 10,\r\n    sendLog_domain: 'https://told-stack-demo.azureedge.net',\r\n    // sendLog_domain: 'http://localhost:7071',\r\n    sendLog_route: 'api/logger/send-log',\r\n});\n\n\n// WEBPACK FOOTER //\n// ./../config/src/core/logger-client.ts","import { ClientConfig } from \"@told/stack/src/data-patterns/lookup-lsc/src-config/client-config\";\r\n\r\nexport const clientConfig = new ClientConfig({\r\n    // lookup_domain: 'https://told-stack-demo.azurewebsites.net',\r\n    // downloadBlob_domain: 'https://told-stack-demo.azurewebsites.net',\r\n    lookup_domain: 'https://told-stack-demo.azureedge.net',\r\n    downloadBlob_domain: 'https://told-stack-demo.azureedge.net',\r\n\r\n    lookup_route: 'api/lookup-lsc',\r\n    downloadBlob_route: 'api/lookup-lsc-download'\r\n});\n\n\n// WEBPACK FOOTER //\n// ./../config/src/lookup-lsc/client.ts","import { ClientConfig } from \"@told/stack/src/payment/stripe/config/client-config\";\r\n\r\nexport const clientConfig = new ClientConfig({\r\n    stripePublishableKey: 'pk_test_hB4VRQY8ICsC6mVsRo8jjnIh',\r\n    checkoutOptions: {\r\n        business: {\r\n            name: 'Told Software',\r\n            imageUrl: 'https://toldstackdemo.blob.core.windows.net/images/ToldLogo128.png'\r\n        },\r\n        requirements: {\r\n            requireZipCode: true,\r\n            requireBillingAddress: true,\r\n        },\r\n        experience: {\r\n            allowRememberMe: true\r\n        },\r\n    },\r\n});\n\n\n// WEBPACK FOOTER //\n// ./../config/src/payment/stripe-client.ts","import * as RX from 'reactxp';\r\nimport { stripeCheckoutProcess } from \"../server-access/stripe\";\r\nimport { CheckoutOptions, CheckoutResult, CheckoutProcessOpen, CheckoutStatus } from \"@told/stack/src/payment/common/checkout-types\";\r\n\r\nexport class StripeTest extends RX.Component<{}, {\r\n    hasStarted: boolean,\r\n    isReady: boolean,\r\n    result: CheckoutResult,\r\n    open: CheckoutProcessOpen\r\n}>{\r\n\r\n    prepare = async () => {\r\n        const r = await stripeCheckoutProcess.prepare();\r\n        this.setState({\r\n            isReady: true,\r\n            open: r.open,\r\n        } as any);\r\n\r\n        r.result.subscribe(x => {\r\n            console.log('Result Changed', { result: x });\r\n\r\n            this.setState({\r\n                result: x\r\n            } as any);\r\n        });\r\n    }\r\n\r\n    open = () => {\r\n        if (this.state.open) {\r\n            this.state.open({\r\n                product: { amountCents: 100, description: 'Cool Thing to Buy' },\r\n                user: { email: 'me@home.com' },\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.hasStarted) {\r\n            this.setState({\r\n                hasStarted: true\r\n            } as any);\r\n\r\n            setTimeout(this.prepare);\r\n        }\r\n\r\n        return (\r\n            <RX.View>\r\n                <RX.Button\r\n                    disabled={!this.state.isReady}\r\n                    onPress={this.open}\r\n                >Checkout</RX.Button>\r\n                {this.state.result && (\r\n                    <RX.View>\r\n                        <RX.Text>status: {this.state.result.status}</RX.Text>\r\n                        <RX.Text>checkoutId: {this.state.result.checkoutId}</RX.Text>\r\n                        <RX.Text>timeChanged: {this.state.result.timeChanged}</RX.Text>\r\n                    </RX.View>\r\n                )}\r\n            </RX.View>\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/stripe-test.tsx","import { Logger } from '@told/stack/src/core/logger/client/logger';\r\nimport { SessionId } from '@told/stack/src/core/account/session-id';\r\nimport { clientConfig_logger as clientConfig } from '../../config';\r\n\r\nconst session = new SessionId();\r\n\r\nexport const logger = new Logger(clientConfig,\r\n    () => ({ sessionId: session.sessionId, userId: session.userId }),\r\n    () => ({ path: 'a/b/c' }),\r\n    () => ({ appVersion: 'v1.0', platform: 'web', userAgent: 'testUserAgent' }),\r\n);\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/server-access/logger.ts","import { StripeCheckoutProcess } from '@told/stack/src/payment/stripe/client/checkout-process';\r\nimport { clientConfig_stripe as clientConfig } from '../../config';\r\nimport { logger } from \"./logger\";\r\n\r\nexport const stripeCheckoutProcess = new StripeCheckoutProcess(clientConfig, {\r\n    logCheckoutEvent: (event, data) => {\r\n        logger.major('Stripe', event, data);\r\n    }\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/app/server-access/stripe.ts","import * as RX from 'reactxp';\r\nimport { App } from './app/app';\r\n\r\nRX.App.initialize(true, true);\r\nRX.UserInterface.setMainView(<App />);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","import { randHex } from \"../utils/rand\";\r\n\r\nexport class SessionId {\r\n    public sessionId = createSessonId();\r\n\r\n    constructor(public userId: string = null) {\r\n        if (!this.userId) {\r\n            this.userId = createUserId_anonymous();\r\n        }\r\n    }\r\n\r\n    setActualUserId(userId: string) {\r\n        if (this.userId.indexOf('anon-') !== 0) { throw 'setActualUserId is only valid if the current userId is anonymous'; }\r\n        this.userId = userId;\r\n    }\r\n}\r\n\r\nexport function createSessonId() {\r\n    const iso = (new Date()).toISOString();\r\n    const rand = randHex(16);\r\n    return `${iso}_${rand}`;\r\n}\r\n\r\nexport function createUserId_anonymous() {\r\n    const iso = (new Date()).toISOString();\r\n    const rand = randHex(16);\r\n    return `anon_${iso}_${rand}`;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/core/account/session-id.ts","import { ClientConfig } from \"../config/client-config\";\r\nimport { UserInfo, AppContextInfo, DeviceInfo, LogItem } from \"../config/types\";\r\n\r\nexport class Logger {\r\n\r\n    private _hasSentSessionInfo = false;\r\n    private _startTime = Date.now();\r\n    private _lastSendTime = Date.now();\r\n\r\n    private _items: LogItem[] = [];\r\n\r\n    private _timeoutId: any = 0;\r\n\r\n    constructor(\r\n        private config: ClientConfig,\r\n        private getUserInfo: () => UserInfo,\r\n        private getContextInfo: () => AppContextInfo,\r\n        private getDeviceInfo: () => DeviceInfo,\r\n    ) {\r\n        setTimeout(() => this.sendSessionInfo(), 250);\r\n    }\r\n\r\n    private sendSessionInfo() {\r\n        if (!this._hasSentSessionInfo) {\r\n            this._hasSentSessionInfo = true;\r\n\r\n            this._items.push({\r\n                category: 'Session',\r\n                event: 'Info',\r\n                data: null,\r\n\r\n                userInfo: this.getUserInfo(),\r\n                appContextInfo: this.getContextInfo(),\r\n                deviceInfo: this.getDeviceInfo(),\r\n\r\n                isError: undefined,\r\n                time: Date.now(),\r\n                runTime: Date.now() - this._startTime,\r\n                startTime: this._startTime,\r\n            });\r\n\r\n            this.sendBatch(true);\r\n        }\r\n    }\r\n\r\n    error(category: string, event: string, data: Object, shouldSendImmediately = false) {\r\n        this.log(category, event, data, true, true);\r\n    }\r\n\r\n    major(category: string, event: string, data: Object, shouldSendImmediately = false) {\r\n        this.log(category, event, data, true);\r\n    }\r\n\r\n    log(category: string, event: string, data: Object, shouldSendImmediately = false, isError = false) {\r\n\r\n        const d: LogItem = {\r\n            category,\r\n            event,\r\n            data,\r\n\r\n            userInfo: this.getUserInfo(),\r\n            appContextInfo: this.getContextInfo(),\r\n            deviceInfo: undefined,\r\n\r\n            isError,\r\n            time: Date.now(),\r\n            runTime: Date.now() - this._startTime,\r\n            startTime: this._startTime,\r\n        };\r\n\r\n        this._items.push(d);\r\n        this.sendBatch(shouldSendImmediately);\r\n\r\n    }\r\n\r\n    private sendBatch = (shouldSendImmediately = false) => {\r\n        if (!shouldSendImmediately\r\n            && Date.now() - this._lastSendTime < this.config.timeBatchSeconds * 1000\r\n        ) {\r\n            this.scheduleSend();\r\n            return;\r\n        }\r\n\r\n        const items = this._items;\r\n        this._items = [];\r\n        this.sendNow(items);\r\n    }\r\n\r\n    private async sendNow(items: LogItem[]) {\r\n        this._lastSendTime = Date.now();\r\n        if (!items || !items.length) { return; }\r\n\r\n        items.forEach(x => {\r\n            if (!x.data) { return; }\r\n\r\n            let d = x.data;\r\n            if (typeof x.data !== 'string') {\r\n                d = JSON.stringify(x.data);\r\n            }\r\n\r\n            if (d.length > this.config.maxDataSize) {\r\n                x.data = 'truncated:' + d.substr(0, this.config.maxDataSize - 16) + '...';\r\n            }\r\n        });\r\n\r\n        let sentItems = items;\r\n        let body = JSON.stringify(items);\r\n\r\n        // If body is too large, break it up\r\n        let hasSentAll = true;\r\n        let count = items.length;\r\n        while (body.length > this.config.maxSendSize) {\r\n            if (count === 1) {\r\n                // Truncate Message Data\r\n                sentItems.forEach(x => x.data = 'truncated:' + JSON.stringify(x.data).substr(0, this.config.maxDataSize) + '...');\r\n                break;\r\n            }\r\n\r\n            hasSentAll = false;\r\n            count = Math.floor(count / 2);\r\n            sentItems = items.slice(0, count);\r\n            body = JSON.stringify(sentItems);\r\n        }\r\n\r\n        if (!hasSentAll) {\r\n            this._items.push(...items.slice(count));\r\n        }\r\n\r\n        const r = await fetch(this.config.getSendLogUrl(), { method: 'POST', body });\r\n\r\n        // If send failure, add items back to end of queue to try again\r\n        if (!r.ok) {\r\n            sentItems.forEach(x => x._attempts++);\r\n            this._items.push(...sentItems.filter(x => x._attempts < this.config.maxItemSendAttempts));\r\n        }\r\n\r\n        // Immediately Send Again to Send the rest of the batch\r\n        if (!hasSentAll) {\r\n            setTimeout(() => this.sendBatch(true));\r\n        }\r\n    }\r\n\r\n    private scheduleSend = () => {\r\n        const timeUsed = Date.now() - this._lastSendTime;\r\n        const timeRemaining = this.config.timeBatchSeconds - timeUsed;\r\n        clearTimeout(this._timeoutId);\r\n        this._timeoutId = setTimeout(this.sendBatch, timeRemaining);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/core/logger/client/logger.ts","import { assignPartial } from \"../../utils/objects\";\r\n\r\nexport interface ClientConfigOptions {\r\n    timeBatchSeconds: number;\r\n\r\n    sendLog_domain: string;\r\n    sendLog_route: string;\r\n}\r\n\r\nexport class ClientConfig {\r\n    timeBatchSeconds: 60;\r\n    maxItemSendAttempts: 3;\r\n    maxSendSize = 32 * 1024;\r\n    maxDataSize = 28 * 1024;\r\n\r\n    sendLog_domain = '/';\r\n    sendLog_route = 'api/logger/send-log';\r\n\r\n    constructor(options: Partial<ClientConfigOptions>) {\r\n        assignPartial(this, options);\r\n    }\r\n\r\n    getSendLogUrl = () => `${this.sendLog_domain}/${this.sendLog_route}`;\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/core/logger/config/client-config.ts","import { delay } from \"./delay\";\r\n\r\nexport class InstanceLoader<T> {\r\n    private _isLoading = false;\r\n    private _instance: T;\r\n    private _resolves: ((value: T) => void)[] = [];\r\n\r\n    constructor(private _load: () => Promise<T>) {\r\n\r\n    }\r\n\r\n    load() {\r\n        return this._getInstance();\r\n    }\r\n\r\n    get instance() {\r\n        return this._getInstance();\r\n    }\r\n\r\n    private _getInstance = () => {\r\n        return new Promise<T>((resolve, reject) => {\r\n            if (this._instance) { return resolve(this._instance); }\r\n\r\n            this._resolves.push(resolve);\r\n\r\n            if (this._isLoading) { return; }\r\n            this._isLoading = true;\r\n\r\n            console.log('InstanceLoader START');\r\n\r\n            this._load().then(x => {\r\n                console.log('InstanceLoader LOADED');\r\n\r\n                this._instance = x;\r\n\r\n                const resolves = this._resolves;\r\n                this._resolves = null;\r\n\r\n                resolves.forEach(r => {\r\n                    setTimeout(() => {\r\n                        try {\r\n                            r(x);\r\n                        } catch (err) {\r\n                            console.error('InstanceLoader: A resolver threw an uncaught error', { err });\r\n                        }\r\n                    });\r\n                });\r\n\r\n                console.log('InstanceLoader DONE');\r\n            });\r\n\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/core/utils/instance-loader.ts","import * as O from 'zen-observable';\r\n// import O = require('zen-observable');\r\nexport type Observable<T> = O<T>;\r\nexport const Observable = (O as any).default as typeof O;\r\nexport type Observer<T> = ZenObservable.SubscriptionObserver<T>;\r\n\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/core/utils/observable.ts","\r\n// maxLength = 64\r\nexport function randHex(length = 8) {\r\n    return '0000000000000000000000000000000000000000000000000000000000000000'\r\n        .substr(0, length).replace(/0/g, () => (0 | Math.random() * 16).toString(16));\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/core/utils/rand.ts","\r\nexport class ScriptLoader<T> {\r\n    private hasStartedLoading = false;\r\n    private instance: T;\r\n\r\n    private resolves: ((value: T) => void)[] = [];\r\n\r\n    constructor(private options: { url: string, scriptElementId: string, getInstance: () => T, onBeforeLoadScript?: () => void, onAfterLoadScript?: () => void }) {\r\n\r\n    }\r\n\r\n    private resolveAll = () => {\r\n        const r = this.resolves;\r\n        this.resolves = [];\r\n        r.forEach(x => x(this.instance));\r\n    };\r\n\r\n    load(): Promise<T> {\r\n        return new Promise<T>((resolve, reject) => {\r\n            if (this.instance) {\r\n                resolve(this.instance);\r\n                return;\r\n            }\r\n\r\n            // Subscribe\r\n            this.resolves.push(resolve);\r\n\r\n            if (this.hasStartedLoading) {\r\n                return;\r\n            }\r\n\r\n            this.hasStartedLoading = true;\r\n            console.log('ScriptLoader.load START');\r\n\r\n            if (this.options.onBeforeLoadScript) { this.options.onBeforeLoadScript(); }\r\n\r\n            // Load Script\r\n            const d = document;\r\n            const s = 'script';\r\n            const id = this.options.scriptElementId;\r\n\r\n            // Script already loaded\r\n            if (d.getElementById(id)) {\r\n                this.resolveAll();\r\n                return;\r\n            }\r\n\r\n            const fjs = d.getElementsByTagName(s)[0];\r\n            const js = d.createElement(s) as HTMLScriptElement;\r\n            js.id = id;\r\n\r\n            js.onload = () => {\r\n                if (this.options.onAfterLoadScript) { this.options.onAfterLoadScript(); }\r\n                this.instance = this.options.getInstance();\r\n                this.resolveAll();\r\n            }\r\n\r\n            js.src = this.options.url;\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/core/utils/script-loader.ts","// https://gist.github.com/jed/982883\r\nexport const uuid = {\r\n    v4: () => ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (a: any) => (a ^ Math.random() * 16 >> a / 4).toString(16))\r\n};\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/core/utils/uuid.ts","import { HttpFunctionRequest } from \"../../../core/types/functions\";\r\nimport { assignPartial } from \"../../../core/utils/objects\";\r\n\r\nexport interface DataKey {\r\n    containerName: string;\r\n    blobName: string;\r\n}\r\n\r\nexport interface LookupData {\r\n    timeKey: string\r\n}\r\n\r\nexport interface LookupResponse {\r\n    timeKey?: string;\r\n    error?: string;\r\n    timeToExpireSeconds: number;\r\n}\r\n\r\nexport interface ClientConfigType {\r\n    timeToLiveSeconds: number;\r\n    timePollSeconds: number;\r\n    maxPollCount: number;\r\n\r\n    getLookupUrl(key: DataKey): string;\r\n    getDataDownloadUrl(key: DataKey, lookup: LookupData): string;\r\n}\r\n\r\nexport interface ClientConfigOptions {\r\n    timeToLiveSeconds: number;\r\n    timePollSeconds: number;\r\n    maxPollCount: number;\r\n    lookup_domain: string;\r\n    lookup_route: string;\r\n    downloadBlob_domain: string;\r\n    downloadBlob_route: string;\r\n}\r\n\r\nexport class ClientConfig implements ClientConfigType, ClientConfigOptions {\r\n    timePollSeconds = 1;\r\n    maxPollCount = 5;\r\n    timeToLiveSeconds = 60;\r\n\r\n    lookup_domain = '/';\r\n    lookup_route = 'api/lookup-lsc';\r\n    downloadBlob_domain = '/';\r\n    downloadBlob_route = 'blob';\r\n\r\n    // WARNING: Gzip is not working in the 4th step: Reading from .gzip blob with node and sending to client\r\n    // In addition, since using a function instead of proxy, gzip is done automatically by the function\r\n    // So it is not needed, and would only be useful to reduce storage size at the cost of increased processing\r\n    shouldGzipDownloadBlob = false;\r\n\r\n    constructor(options?: Partial<ClientConfigOptions>) {\r\n        assignPartial(this, options);\r\n    }\r\n\r\n    getLookupUrl(key: DataKey): string {\r\n        return `${this.lookup_domain}/${this.lookup_route}/${key.containerName}/${key.blobName}`;\r\n    }\r\n\r\n    getDataDownloadUrl(key: DataKey, lookup: LookupData): string {\r\n        return `${this.downloadBlob_domain}/${this.downloadBlob_route ? this.downloadBlob_route + '/' : ''}${key.containerName}/${this.getDataDownloadBlobName(key.blobName, lookup)}`;\r\n    }\r\n\r\n    getDataDownloadBlobName(blobName: string, lookup: LookupData) {\r\n        // TODO: Test if works with .ext and switch to underscore if needed\r\n        return `${blobName}/${lookup.timeKey}${this.shouldGzipDownloadBlob ? '_gzip' : ''}`;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/data-patterns/lookup-lsc/src-config/client-config.ts","import { Observable } from \"../../core/utils/observable\";\r\n\r\nexport interface CheckoutBusinessOptions {\r\n    name: string;\r\n    imageUrl: string;\r\n}\r\n\r\nexport interface CheckoutProductOptions {\r\n    amountCents: number;\r\n    description: string;\r\n}\r\n\r\nexport interface CheckoutUserOptions {\r\n    email?: string;\r\n}\r\n\r\nexport interface CheckoutRequirementOptions {\r\n    requireZipCode: boolean;\r\n    requireBillingAddress: boolean;\r\n}\r\n\r\nexport interface CheckoutExperienceOptions {\r\n    allowRememberMe: boolean;\r\n}\r\n\r\nexport interface CheckoutOptions {\r\n    product: CheckoutProductOptions;\r\n    user: CheckoutUserOptions;\r\n\r\n    business: CheckoutBusinessOptions;\r\n    requirements: CheckoutRequirementOptions;\r\n    experience: CheckoutExperienceOptions;\r\n}\r\n\r\nexport enum CheckoutStatus {\r\n    // Nothing has happened yet\r\n    NotStarted = 'NotStarted',\r\n    // The user has clicked the open button and is opening\r\n    Started = 'Started',\r\n    // The form has called the opened callback\r\n    Opened = 'Opened',\r\n    // The form has called the closed callback (Caneelled)\r\n    Closed = 'Closed',\r\n    // The user has submitted and the provider is verifying the information \r\n    Verifing = 'Verifing',\r\n    // The payment was sent to the server\r\n    Submitting = 'Submitting',\r\n    // The payment is being processed on the server\r\n    Processing = 'Processing',\r\n    // The payment was made successfully\r\n    Success = 'Success',\r\n    // The payment failed (Try Again)\r\n    PaymentFailed = 'PaymentFailed',\r\n    // The payment succeeded but the processing failed (Customer Support)\r\n    ProcessingFailed = 'ProcessingFailed',\r\n    // The payment process was not found\r\n    NotFound = 'NotFound',\r\n}\r\n\r\nexport type CheckoutProcessOpen = (options: Partial<CheckoutOptions>) => void;\r\n\r\nexport interface CheckoutProcessPrepareResult {\r\n    open: CheckoutProcessOpen;\r\n    result: Observable<CheckoutResult>;\r\n}\r\n\r\nexport interface CheckoutResult {\r\n    checkoutId: string;\r\n    status: CheckoutStatus;\r\n    timeChanged: number;\r\n}\r\n\r\nexport interface CheckoutProcess {\r\n    // Prepare must be called before user can Click Button (Button should be disabled until ready)\r\n    prepare(): Promise<CheckoutProcessPrepareResult>;\r\n\r\n    // User Clicks Button (direct call only)\r\n    // open(options: CheckoutOptions): Observable<CheckoutResult>;\r\n\r\n    // Check Results on a Previously Submitted Process\r\n    getResult(checkoutId: string): Observable<CheckoutResult>;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/payment/common/checkout-types.ts","import { Observable, Observer } from \"../../../core/utils/observable\";\r\nimport { CheckoutProcess, CheckoutOptions, CheckoutResult, CheckoutProcessPrepareResult, CheckoutStatus } from '../../common/checkout-types';\r\nimport { ClientConfig, ClientRuntimeOptions } from \"../config/client-config\";\r\nimport { StripeCheckoutAccess, StripeToken, StripeTokenArgs } from \"./stripe-checkout-access\";\r\nimport { assignPartial } from \"../../../core/utils/objects\";\r\nimport { uuid } from \"../../../core/utils/uuid\";\r\n\r\nexport class StripeCheckoutProcess implements CheckoutProcess {\r\n\r\n    private _access: StripeCheckoutAccess;\r\n\r\n    constructor(private config: ClientConfig, private runtime: ClientRuntimeOptions) {\r\n\r\n    }\r\n\r\n    prepare = async (): Promise<CheckoutProcessPrepareResult> => {\r\n        console.log('StripeCheckoutProcess START');\r\n\r\n        if (!this._access) {\r\n            this._access = new StripeCheckoutAccess(this.config.stripePublishableKey);\r\n        }\r\n\r\n        console.log('StripeCheckoutProcess Prepare Stripe Access');\r\n        await this._access.prepare();\r\n\r\n        console.log('StripeCheckoutProcess Setup Result Observer');\r\n        const checkoutId = uuid.v4();\r\n\r\n        let observer: Observer<CheckoutResult>;\r\n        let lastResult: CheckoutResult = {\r\n            checkoutId,\r\n            status: CheckoutStatus.NotStarted,\r\n            timeChanged: Date.now(),\r\n        };\r\n\r\n        const updateResult = (result: Partial<CheckoutResult>) => {\r\n            console.log('StripeCheckoutProcess updateResult', { result });\r\n\r\n            if (result.checkoutId && result.checkoutId !== lastResult.checkoutId) {\r\n                throw 'StripeCheckoutProcess: Cannot change checkoutId';\r\n            }\r\n\r\n            assignPartial(lastResult, result);\r\n            lastResult.checkoutId = checkoutId;\r\n            lastResult.timeChanged = Date.now();\r\n            observer.next(lastResult);\r\n\r\n            this.runtime.logCheckoutEvent('ResultChange', lastResult);\r\n        }\r\n\r\n        const result = new Observable<CheckoutResult>(o => {\r\n            console.log('StripeCheckoutProcess Observable START');\r\n            observer = o;\r\n        });\r\n\r\n        const tokenCallback = (token: StripeToken, args: StripeTokenArgs) => {\r\n\r\n            updateResult({ status: CheckoutStatus.Submitting });\r\n\r\n            // TODO: Submit to server\r\n\r\n        };\r\n\r\n        const open = (options: Partial<CheckoutOptions>): void => {\r\n\r\n            const o = {} as CheckoutOptions;\r\n            assignPartial(o, this.config.checkoutOptions);\r\n            assignPartial(o, options);\r\n\r\n            this._access.open({\r\n                tokenCallback,\r\n                recommendedOptions: {\r\n                    amount: o.product.amountCents,\r\n                    name: o.business.name,\r\n                    image: o.business.imageUrl,\r\n                    description: o.product.description,\r\n                    zipCode: o.requirements.requireZipCode,\r\n                    billingAddress: o.requirements.requireBillingAddress,\r\n                },\r\n                additionalOptions: {\r\n                    email: o.user.email,\r\n                    allowRememberMe: o.experience.allowRememberMe,\r\n                    opened: () => {\r\n                        updateResult({ status: CheckoutStatus.Opened });\r\n                    },\r\n                    closed: () => {\r\n                        if (lastResult.status < CheckoutStatus.Submitting) {\r\n                            updateResult({ status: CheckoutStatus.Closed });\r\n                        }\r\n                    },\r\n                },\r\n            });\r\n\r\n            this.runtime.logCheckoutEvent('Open', { checkoutId, openOptions: options, configOptions: this.config.checkoutOptions });\r\n            updateResult({ status: CheckoutStatus.Started });\r\n        };\r\n\r\n        console.log('StripeCheckoutProcess DONE');\r\n\r\n        return {\r\n            open,\r\n            result\r\n        };\r\n    }\r\n\r\n    getResult(checkoutId: string): Observable<CheckoutResult> {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/payment/stripe/client/checkout-process.ts","import { ScriptLoader } from \"../../../core/utils/script-loader\";\r\nimport { InstanceLoader } from \"../../../core/utils/instance-loader\";\r\n\r\n// https://stripe.com/docs/checkout#integration-custom\r\n\r\nexport interface StripeCheckout {\r\n    configure(options: StripeConfigureOptions & StripeRequiredOptions & StripeRecommendedOptions & StripeAdditionalOptions): StripeCheckoutHandler;\r\n}\r\n\r\nexport interface StripeCheckoutHandler {\r\n    open(options: StripeRequiredOptions & StripeRecommendedOptions & StripeAdditionalOptions): void;\r\n}\r\n\r\nexport interface StripeConfigureOptions {\r\n    // Stripe Publishable Key\r\n    key: string;\r\n}\r\n\r\nexport interface StripeRequiredOptions {\r\n    // Callback\r\n    token?: (token: StripeToken, args: StripeTokenArgs) => void;\r\n}\r\n\r\n// export export interface TokenResult {\r\n//     token: StripeToken;\r\n//     args: StripeTokenArgs;\r\n// }\r\n\r\nexport interface StripeRecommendedOptions {\r\n    // Business Image\r\n    image?: string;\r\n    // Business Name\r\n    name?: string;\r\n    // Product Description\r\n    description?: string;\r\n    // Amount in Cents\r\n    amount?: number;\r\n    // Language\r\n    locale?: 'auto' | string;\r\n    // Zip Code Required\r\n    zipCode?: boolean;\r\n    // Billing Address Required\r\n    billingAddress?: boolean;\r\n}\r\n\r\nexport interface StripeAdditionalOptions {\r\n    // Currency Code (Default: USD)\r\n    currency?: string;\r\n    // Payment Button Label\r\n    panelLabel?: string;\r\n    // Shipping Addres Required\r\n    shippingAddress?: boolean;\r\n    // Prefilled Email\r\n    email?: string;\r\n    // Start Button Text  (Simple Only)\r\n    // label?: string;\r\n    // Remember Me Allowed\r\n    allowRememberMe?: boolean;\r\n    // Bitcoin Payment Allowed\r\n    bitcoin?: boolean;\r\n    // Opened Callback\r\n    opened?: () => void;\r\n    // Closed Callback\r\n    closed?: () => void;\r\n}\r\n\r\nexport interface StripeToken {\r\n    id: string;\r\n    email: string;\r\n}\r\n\r\nexport interface StripeTokenArgs {\r\n\r\n    // Billing name and address\r\n    billing_name?: string;\r\n    billing_address_country?: string;\r\n    billing_address_zip?: string;\r\n    billing_address_state?: string;\r\n    billing_address_line1?: string;\r\n    billing_address_city?: string;\r\n    billing_address_country_code?: string;\r\n\r\n    // Shipping name and address\r\n    shipping_name?: string;\r\n    shipping_address_country?: string;\r\n    shipping_address_zip?: string;\r\n    shipping_address_state?: string;\r\n    shipping_address_line1?: string;\r\n    shipping_address_city?: string;\r\n    shipping_address_country_code?: string;\r\n}\r\n\r\n\r\ndeclare var StripeCheckout: StripeCheckout;\r\n\r\nconst scriptLoader = new ScriptLoader({\r\n    url: 'https://checkout.stripe.com/checkout.js',\r\n    scriptElementId: 'StripeCheckout',\r\n    getInstance: () => {\r\n        return StripeCheckout;\r\n    }\r\n});\r\n\r\nexport class StripeCheckoutAccess {\r\n\r\n    _handler: StripeCheckoutHandler;\r\n\r\n    constructor(private stripePublishableKey: string) { }\r\n\r\n    private handlerLoader = new InstanceLoader(async () => {\r\n        console.log('StripeCheckoutProcess.handlerLoader START');\r\n        const s = await scriptLoader.load();\r\n        console.log('StripeCheckoutProcess.handlerLoader LOADED');\r\n        const handler = await s.configure({ key: this.stripePublishableKey });\r\n        console.log('StripeCheckoutProcess.handlerLoader END');\r\n        return handler;\r\n    });\r\n\r\n    prepare = async () => {\r\n        this._handler = await this.handlerLoader.instance;\r\n        return;\r\n    }\r\n\r\n    // This must be a direct call to handler.open (It cannot be async or will get popup-blocked)\r\n    open = (options: {\r\n        tokenCallback: (token: StripeToken, args: StripeTokenArgs) => void,\r\n        recommendedOptions?: StripeRecommendedOptions,\r\n        additionalOptions?: StripeAdditionalOptions\r\n    }) => {\r\n        const handler = this._handler;\r\n\r\n        if (!handler) {\r\n            throw 'The Stripe Checkout Handler must be loaded before Open is Clicked';\r\n        }\r\n\r\n        handler.open({\r\n            token: options.tokenCallback,\r\n            ...options.recommendedOptions,\r\n            ...options.additionalOptions,\r\n        });\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/payment/stripe/client/stripe-checkout-access.ts","import { CheckoutOptions, CheckoutResult } from \"../../common/checkout-types\";\r\nimport { ClientConfig as LoggerClientConfig } from \"../../../core/logger/config/client-config\";\r\nimport { assignPartial } from \"../../../core/utils/objects\";\r\n\r\nexport type CheckoutEventType = 'Open' | 'ResultChange';\r\n\r\nexport interface ClientConfigOptions {\r\n    stripePublishableKey: string;\r\n    checkoutOptions: Partial<CheckoutOptions>;\r\n}\r\n\r\nexport interface ClientRuntimeOptions{\r\n    logCheckoutEvent: (type: CheckoutEventType, data: Object) => void;\r\n}\r\n\r\nexport class ClientConfig implements ClientConfigOptions {\r\n    stripePublishableKey: string;\r\n    checkoutOptions: CheckoutOptions;\r\n\r\n    constructor(private options: Partial<ClientConfigOptions>) {\r\n        assignPartial(this, options);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/payment/stripe/config/client-config.ts","\r\n// export function objectToValueIterator<T>(obj: { [key: string]: T }): { [key: string]: T } & Iterable<T> {\r\n\r\n//     const o = obj as any;\r\n//     o[Symbol.iterator] = () => {\r\n//         let keys = Object.getOwnPropertyNames(obj);\r\n//         let i = 0;\r\n\r\n//         return {\r\n//             next: () => {\r\n//                 const key = keys[i++];\r\n//                 const value = obj[key];\r\n//                 return {\r\n//                     value,\r\n//                     done: i >= keys.length\r\n//                 };\r\n//             }\r\n//         };\r\n//     };\r\n\r\n//     return o;\r\n// }\r\n\r\n\r\n// export function objectToKeyValueIterator<T>(obj: { [key: string]: T }): { [key: string]: T } & Iterable<{ key: string, value: T }> {\r\n\r\n//     const o = obj as any;\r\n//     o[Symbol.iterator] = () => {\r\n//         let keys = Object.getOwnPropertyNames(obj);\r\n//         let i = 0;\r\n\r\n//         return {\r\n//             next: () => {\r\n//                 const key = keys[i++];\r\n//                 const value = obj[key];\r\n//                 return {\r\n//                     value: { key, value },\r\n//                     done: i >= keys.length\r\n//                 };\r\n//             }\r\n//         };\r\n//     };\r\n\r\n//     return o;\r\n// }\r\n\r\nexport function group<T>(items: T[], getKey: (x: T) => string) {\r\n    const g = items.reduce((o, x) => {\r\n        const k = getKey(x);\r\n        const group = o[k] = o[k] || { items: [] };\r\n        group.items.push(x);\r\n        return o;\r\n    }, {} as any) as { [key: string]: { items: T[] } };\r\n\r\n    //return objectToValueIterator(g);\r\n    return g;\r\n}\r\n\r\nexport function groupToArray<T>(items: T[], getKey: (x: T) => string) {\r\n    const g = group(items, getKey);\r\n    return Object.getOwnPropertyNames(g).map(k => g[k].items);\r\n}\r\n\r\n\r\nexport function assignPartial<T>(t: T, p: Partial<T>): T {\r\n    for (let k in p) {\r\n        t[k] = p[k];\r\n    }\r\n\r\n    return t;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/core/utils/objects.ts","export { clientConfig as clientConfig_lookupLsc } from '../../config/src/lookup-lsc/client';\nexport { clientConfig as clientConfig_logger } from '../../config/src/core/logger-client';\nexport { clientConfig as clientConfig_stripe } from '../../config/src/payment/stripe-client';\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.ts"],"sourceRoot":""}