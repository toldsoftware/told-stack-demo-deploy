{"version":3,"sources":["webpack:///webpack/bootstrap c7f026b3f5acf4111a54?c008*****","webpack:///./_intermediate/entries/http-to-table.ts","webpack:///C:/Projects/told-stack/told-stack-npm/src/data-patterns/http-to-table/src-server/function-01-http.ts","webpack:///./config/config-http-to-table.ts","webpack:///C:/Projects/told-stack/told-stack-npm/src/data-patterns/http-to-table/src-config/config.ts"],"names":[],"mappings":"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","file":"./_deploy/http-to-table/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 271);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c7f026b3f5acf4111a54","\nimport { runFunction } from '@told/stack/lib/data-patterns/http-to-table/src-server/function-01-http';\nimport { config } from '../../config/config-http-to-table';\n\nconst run = function (...args: any[]) {\n    runFunction.apply(null, [config, ...args]);\n};\n\ndeclare const global: any;\nglobal.__run = run;\nmodule.exports = global.__run;\n\n\n\n// WEBPACK FOOTER //\n// ./_intermediate/entries/http-to-table.ts","import { HttpFunction_Config, HttpFunction_TemplateConfig, OutputTableData, HttpFunction_BindingData } from \"../src-config/config\";\r\nimport { HttpFunctionResponse, HttpFunctionRequest } from \"../../../core/types/functions\";\r\nimport { insertOrMergeTableRow } from \"../../../core/utils/azure-storage-binding/tables\";\r\n\r\n// Http Request: Handle Update Request\r\n// Blob In: Read Old Lookup Blob Value\r\n// Queue Out: Update Request Queue\r\n// Http Response: Return Old Lookup Value with Short TTL\r\n\r\nexport function createFunctionJson(config: HttpFunction_TemplateConfig) {\r\n    return {\r\n        bindings: [\r\n            {\r\n                name: \"req\",\r\n                type: \"httpTrigger\",\r\n                direction: \"in\",\r\n                authLevel: \"anonymous\",\r\n                route: config.http_route\r\n            },\r\n            {\r\n                name: \"res\",\r\n                type: \"http\",\r\n                direction: \"out\"\r\n            },\r\n            {\r\n                name: \"inOutputTable\",\r\n                type: \"table\",\r\n                direction: \"in\",\r\n                tableName: config.outputTable_tableName,\r\n                partitionKey: config.outputTable_partitionKey,\r\n                rowKey: config.outputTable_rowKey,\r\n                connection: config.outputTable_connection\r\n            },\r\n            {\r\n                name: \"outOutputTable\",\r\n                type: \"table\",\r\n                direction: \"out\",\r\n                tableName: config.outputTable_tableName,\r\n                partitionKey: config.outputTable_partitionKey,\r\n                rowKey: config.outputTable_rowKey,\r\n                connection: config.outputTable_connection\r\n            },\r\n        ],\r\n        disabled: false\r\n    };\r\n}\r\n\r\nexport function runFunction(config: HttpFunction_Config, context: {\r\n    log: typeof console.log,\r\n    done: () => void,\r\n    res: HttpFunctionResponse,\r\n    bindingData: HttpFunction_BindingData,\r\n    bindings: {\r\n        inOutputTable: OutputTableData,\r\n        outOutputTable: OutputTableData,\r\n    }\r\n}, req: HttpFunctionRequest) {\r\n    const data = config.getDataFromRequest(req, context.bindingData);\r\n\r\n    context.log('insertOrMergeTableRow', { inOutputTable: context.bindings.inOutputTable, outOutputTable: context.bindings.outOutputTable, data });\r\n    //context.bindings.outOutputTable = insertOrMergeTableRow(context.bindings.inOutputTable, data);\r\n    if (context.bindings.inOutputTable) {\r\n        context.bindings.outOutputTable = context.bindings.inOutputTable;\r\n        for (let k in data) {\r\n            context.bindings.outOutputTable[k] = data[k];\r\n        }\r\n    } else {\r\n        context.bindings.outOutputTable = data;\r\n    }\r\n\r\n\r\n    // context.log('The Data was Queued', data);\r\n    context.res = {\r\n        body: 'The Data was Stored in a Table',\r\n        headers: {\r\n            'Content-Type': 'text/plain'\r\n        }\r\n    };\r\n    context.done();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/told-stack/told-stack-npm/src/data-patterns/http-to-table/src-server/function-01-http.ts","import { Config } from \"@told/stack/lib/data-patterns/http-to-table/src-config/config\";\r\n\r\nexport const config = new Config();\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./config/config-http-to-table.ts","import { HttpFunctionRequest } from \"../../../core/types/functions\";\r\n\r\nexport interface HttpFunction_TemplateConfig {\r\n    http_route: string;\r\n\r\n    outputTable_tableName: string;\r\n    outputTable_partitionKey: string;\r\n    outputTable_rowKey: string;\r\n    outputTable_connection: string;\r\n}\r\n\r\nexport interface HttpFunction_Config {\r\n    getDataFromRequest(req: HttpFunctionRequest, bindingData: HttpFunction_BindingData): OutputTableData;\r\n}\r\n\r\nexport interface HttpFunction_BindingData {\r\n    table: string;\r\n    partition: string;\r\n    row: string;\r\n}\r\n\r\nexport interface OutputTableData {\r\n    [key: string]: any\r\n}\r\n\r\nexport class Config<T> implements HttpFunction_TemplateConfig, HttpFunction_Config {\r\n    constructor(\r\n        public http_routeRoot = 'api/http-to-table',\r\n        public default_storageConnectionString_AppSettingName = 'AZURE_STORAGE_CONNECTION_STRING') { }\r\n\r\n    http_route = this.http_routeRoot + '/{table}/{partition}/{row}';\r\n\r\n    outputTable_tableName = `{table}`;\r\n    outputTable_partitionKey = `{partition}`;\r\n    outputTable_rowKey = `{row}`;\r\n    outputTable_connection = this.default_storageConnectionString_AppSettingName;\r\n\r\n    getDataFromRequest(req: HttpFunctionRequest, bindingData: HttpFunction_BindingData): OutputTableData {\r\n        // Allow controlling property names directly\r\n        return { ...req.body };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/told-stack/told-stack-npm/src/data-patterns/http-to-table/src-config/config.ts"],"sourceRoot":""}