{"version":3,"sources":["webpack:///webpack/bootstrap c7f026b3f5acf4111a54?c008*********","webpack:///./_intermediate/entries/http-echo.ts","webpack:///C:/Projects/told-stack/told-stack-npm/src/tools/http-echo/src-server/function-01-http.ts","webpack:///./config/config-http-echo.ts","webpack:///C:/Projects/told-stack/told-stack-npm/src/tools/http-echo/src-config/config.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC5DA,oDAA0F;AAC1F,oDAAuD;AAEvD,MAAM,GAAG,GAAG,UAAU,GAAG,IAAW;IAChC,8BAAW,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,yBAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC;AAGF,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;AACnB,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;;;;;;;;;;;ACP9B,sCAAsC;AACtC,sCAAsC;AACtC,kCAAkC;AAClC,wDAAwD;AAExD,4BAAmC,MAAmC;IAClE,MAAM,CAAC;QACH,QAAQ,EAAE;YACN;gBACI,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,IAAI;gBACf,SAAS,EAAE,WAAW;gBACtB,KAAK,EAAE,MAAM,CAAC,UAAU;aAC3B;YACD;gBACI,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,KAAK;aACnB;SACJ;QACD,QAAQ,EAAE,KAAK;KAClB,CAAC;AACN,CAAC;AAlBD,gDAkBC;AAED,qBAA4B,MAA2B,EAAE,OAOxD,EAAE,GAAwB;IACvB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAErB,MAAM,IAAI,GAAG,MAAM,CAAC,kBAAkB,CAAC,GAAG,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;IACjE,OAAO,CAAC,GAAG,GAAG;QACV,IAAI,EAAE,IAAI;QACV,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;SACrC;KACJ,CAAC;IAEF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACpB,OAAO,CAAC,IAAI,EAAE,CAAC;AACnB,CAAC;AApBD,kCAoBC;AAAA,CAAC;;;;;;;;;;;AChDF,0CAA2E;AAE9D,cAAM,GAAG,IAAI,eAAM,EAAE,CAAC;;;;;;;;;;;ACiBnC;IACI,YACW,iBAAiB,eAAe,EAChC,iDAAiD,iCAAiC;QADlF,mBAAc,GAAd,cAAc,CAAkB;QAChC,mDAA8C,GAA9C,8CAA8C,CAAoC;QAE7F,eAAU,GAAG,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;IAFmD,CAAC;IAIlG,kBAAkB,CAAC,GAAwB,EAAE,WAAqC;QAC9E,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;IAChE,CAAC;CACJ;AAVD,wBAUC","file":"./_deploy/http-echo/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 255);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c7f026b3f5acf4111a54","\nimport { runFunction } from '@told/stack/lib/tools/http-echo/src-server/function-01-http';\nimport { config } from '../../config/config-http-echo';\n\nconst run = function (...args: any[]) {\n    runFunction.apply(null, [config, ...args]);\n};\n\ndeclare const global: any;\nglobal.__run = run;\nmodule.exports = global.__run;\n\n\n\n// WEBPACK FOOTER //\n// ./_intermediate/entries/http-echo.ts","import { HttpFunction_Config, HttpFunction_TemplateConfig, InputData, HttpFunction_BindingData } from \"../src-config/config\";\r\nimport { HttpFunctionResponse, HttpFunctionRequest } from \"../../../core/types/functions\";\r\n\r\n// Http Request: Handle Update Request\r\n// Blob In: Read Old Lookup Blob Value\r\n// Queue Out: Update Request Queue\r\n// Http Response: Return Old Lookup Value with Short TTL\r\n\r\nexport function createFunctionJson(config: HttpFunction_TemplateConfig) {\r\n    return {\r\n        bindings: [\r\n            {\r\n                name: \"req\",\r\n                type: \"httpTrigger\",\r\n                direction: \"in\",\r\n                authLevel: \"anonymous\",\r\n                route: config.http_route\r\n            },\r\n            {\r\n                name: \"res\",\r\n                type: \"http\",\r\n                direction: \"out\"\r\n            },\r\n        ],\r\n        disabled: false\r\n    };\r\n}\r\n\r\nexport function runFunction(config: HttpFunction_Config, context: {\r\n    log: typeof console.log,\r\n    done: () => void,\r\n    res: HttpFunctionResponse,\r\n    bindingData: HttpFunction_BindingData,\r\n    bindings: {\r\n    }\r\n}, req: HttpFunctionRequest) {\r\n    context.log('START');\r\n\r\n    const data = config.getDataFromRequest(req, context.bindingData);\r\n    context.res = {\r\n        body: data,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    context.log('DONE');\r\n    context.done();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/told-stack/told-stack-npm/src/tools/http-echo/src-server/function-01-http.ts","import { Config } from \"@told/stack/lib/tools/http-echo/src-config/config\";\r\n\r\nexport const config = new Config();\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./config/config-http-echo.ts","import { HttpFunctionRequest } from \"../../../core/types/functions\";\r\n\r\nexport interface HttpFunction_TemplateConfig {\r\n    http_route: string;\r\n}\r\n\r\nexport interface HttpFunction_Config {\r\n    getDataFromRequest(req: HttpFunctionRequest, bindingData: HttpFunction_BindingData): InputData;\r\n}\r\n\r\nexport interface HttpFunction_BindingData {\r\n    path: string;\r\n}\r\n\r\nexport interface InputData {\r\n    key: HttpFunction_BindingData;\r\n    value: any;\r\n}\r\n\r\nexport class Config<T> implements HttpFunction_TemplateConfig, HttpFunction_Config {\r\n    constructor(\r\n        public http_routeRoot = 'api/http-echo',\r\n        public default_storageConnectionString_AppSettingName = 'AZURE_STORAGE_CONNECTION_STRING') { }\r\n\r\n    http_route = this.http_routeRoot + '/{*path}';\r\n\r\n    getDataFromRequest(req: HttpFunctionRequest, bindingData: HttpFunction_BindingData) {\r\n        return { key: { path: bindingData.path }, value: req.body };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Projects/told-stack/told-stack-npm/src/tools/http-echo/src-config/config.ts"],"sourceRoot":""}