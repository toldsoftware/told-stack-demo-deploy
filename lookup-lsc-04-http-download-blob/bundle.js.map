{"version":3,"sources":["webpack:///webpack/bootstrap eb709d95a90101d7fd17?6226****","webpack:///./config/config-lookup-lsc.ts?6919*","webpack:///./../../../told-stack-npm/src/data-patterns/lookup-lsc/src-config/server-config.ts?6c16*","webpack:///./../src-client/config/config-lookup-lsc.ts?44d0*","webpack:///./../../../told-stack-npm/src/data-patterns/lookup-lsc/src-config/client-config.ts?215b*","webpack:///./../../../told-stack-npm/src/data-patterns/http-input-blob/src-server/function-01-http.ts","webpack:///./_intermediate/entries/lookup-lsc-04-http-download-blob.ts","webpack:///./../../../told-stack-npm/src/data-patterns/lookup-lsc/src-server/function-04-http-download-blob.ts"],"names":[],"mappings":"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","file":"./../_deploy/lookup-lsc-04-http-download-blob/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 299);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eb709d95a90101d7fd17","import { ServerConfig } from \"@told/stack/src/data-patterns/lookup-lsc/src-config/server-config\";\r\nimport { clientConfig } from '../../src-client/config/config-lookup-lsc';\r\n\r\nexport const config = new ServerConfig(clientConfig, async () => { return { data: 'TEST ' + new Date() } as any; });\r\n\n\n\n// WEBPACK FOOTER //\n// ./config/config-lookup-lsc.ts","import { HttpFunctionRequest } from \"../../../core/types/functions\";\r\nimport { DataKey, LookupData, ClientConfig } from \"./client-config\";\r\nexport { DataKey, LookupData };\r\n\r\nexport interface ChangeData {\r\n    changeTime: number;\r\n}\r\n\r\nexport interface ServerConfigType {\r\n    timeToLiveSeconds: number;\r\n    timeExtendSeconds: number;\r\n    timeExecutionSeconds: number;\r\n    timePollSeconds: number;\r\n\r\n    getDataDownloadBlobName(blobName: string, lookup: LookupData): string;\r\n\r\n    getKeyFromRequest(req: HttpFunctionRequest, bindingData: HttpFunction_BindingData): DataKey;\r\n\r\n    getChangeTableRowKey_fromQueueTrigger(queueTrigger: UpdateRequestQueueMessage): { table: string, partition: string, row: string };\r\n    getLookupTableRowKey_fromQueueTrigger(queueTrigger: UpdateRequestQueueMessage): { table: string, partition: string, row: string };\r\n\r\n    obtainBlobData(oldBlob: any, key: DataKey): Promise<any>;\r\n}\r\n\r\nexport interface HttpFunction_BindingData {\r\n    container: string;\r\n    blob: string;\r\n}\r\n\r\nexport interface FunctionTemplateConfig {\r\n    http_route: string;\r\n\r\n    lookupTable_connection: string;\r\n    lookupTable_tableName: string;\r\n    lookupTable_partitionKey: string;\r\n    lookupTable_rowKey: string;\r\n    lookupTable_tableName_fromQueueTrigger: string;\r\n    lookupTable_partitionKey_fromQueueTrigger: string;\r\n    lookupTable_rowKey_fromQueueTrigger: string;\r\n\r\n    updateRequestQueue_connection: string;\r\n    updateRequestQueue_queueName: string;\r\n\r\n    updateExecuteQueue_connection: string;\r\n    updateExecuteQueue_queueName: string;\r\n\r\n    changeTable_connection: string;\r\n    changeTable_tableName: string;\r\n    changeTable_partitionKey: string;\r\n    changeTable_rowKey: string;\r\n    changeTable_tableName_fromQueueTrigger: string;\r\n    changeTable_partitionKey_fromQueueTrigger: string;\r\n    changeTable_rowKey_fromQueueTrigger: string;\r\n\r\n    dataRawBlob_connection: string;\r\n    dataRawBlob_path_fromQueueTrigger: string;\r\n\r\n    dataDownloadBlob_connection: string;\r\n    dataDownloadBlob_path_from_queueTriggerDate: string;\r\n\r\n    http_dataDownload_route: string;\r\n    dataDownloadBlob_path_from_http_dataDownload_route: string;\r\n}\r\n\r\nexport interface UpdateRequestQueueMessage extends DataKey {\r\n    timeKey: string;\r\n}\r\n\r\nexport class ServerConfig implements ServerConfigType, FunctionTemplateConfig {\r\n    timeToLiveSeconds = 60;\r\n    timeExtendSeconds = 1;\r\n    timeExecutionSeconds = 10;\r\n    timePollSeconds = this.clientConfig.timePollSeconds;\r\n\r\n    updateRequestQueue_connection = this.default_storageConnectionString_AppSettingName;\r\n    updateExecuteQueue_connection = this.default_storageConnectionString_AppSettingName;\r\n    lookupTable_connection = this.default_storageConnectionString_AppSettingName;\r\n    changeTable_connection = this.default_storageConnectionString_AppSettingName;\r\n    dataRawBlob_connection = this.default_storageConnectionString_AppSettingName;\r\n    dataDownloadBlob_connection = this.default_storageConnectionString_AppSettingName;\r\n\r\n    // Slash in blobName is not supported (i.e. {*blob}) because table partitionKey/rowKey cannot / in the name\r\n    // http_route = this.apiRoutePath + '/{container}/{*blob}';\r\n    http_route = this.clientConfig.lookup_route + '/{container}/{blob}';\r\n    getDataDownloadBlobName = this.clientConfig.getDataDownloadBlobName;\r\n    dataRawBlob_path_fromQueueTrigger = `{containerName}/{blobName}`;\r\n    dataDownloadBlob_path_from_queueTriggerDate = `{containerName}/{blobName}/{timeKey}.gzip`;\r\n    dataDownloadBlob_path_from_http_dataDownload_route = `{containerName}/{blobName}/{timeKey}.gzip`;\r\n    http_dataDownload_route = this.clientConfig.downloadBlob_route + '/{container}/{blob}/{timeKey}';\r\n\r\n    constructor(\r\n        private clientConfig: ClientConfig,\r\n        public obtainBlobData: <T>(oldBlob: T, key: DataKey) => Promise<T>,\r\n        public default_storageConnectionString_AppSettingName = 'AZURE_STORAGE_CONNECTION_STRING'\r\n    ) { }\r\n\r\n    getKeyFromRequest(req: HttpFunctionRequest, bindingData: HttpFunction_BindingData): DataKey {\r\n        const d = bindingData;\r\n\r\n        return {\r\n            containerName: d.container,\r\n            blobName: d.blob,\r\n        };\r\n    }\r\n\r\n    updateRequestQueue_queueName = 'lookup-lsc-update-request-queue';\r\n    updateExecuteQueue_queueName = 'lookup-lsc-update-execute-queue';\r\n    // These will encode to a url that receives parametes\r\n    // Example: '{container}/{blob}/_lookup.txt'\r\n\r\n    lookupTable_tableName = `blobaccess`;\r\n    lookupTable_partitionKey = `{container}_{blob}`;\r\n    lookupTable_rowKey = `lookup`;\r\n\r\n    lookupTable_tableName_fromQueueTrigger = `blobaccess`;\r\n    lookupTable_partitionKey_fromQueueTrigger = `{containerName}_{blobName}`;\r\n    lookupTable_rowKey_fromQueueTrigger = `lookup`;\r\n\r\n    getLookupTableRowKey_fromQueueTrigger(queueTrigger: UpdateRequestQueueMessage) {\r\n        return {\r\n            table: this.lookupTable_tableName_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n            partition: this.lookupTable_partitionKey_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n            row: this.lookupTable_rowKey_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n        };\r\n    }\r\n\r\n    changeTable_tableName = `blobaccess`;\r\n    changeTable_partitionKey = `{container}_{blob}`;\r\n    changeTable_rowKey = `change`;\r\n\r\n    changeTable_tableName_fromQueueTrigger = `blobaccess`;\r\n    changeTable_partitionKey_fromQueueTrigger = `{containerName}_{blobName}`;\r\n    changeTable_rowKey_fromQueueTrigger = `change`;\r\n\r\n    getChangeTableRowKey_fromQueueTrigger(queueTrigger: UpdateRequestQueueMessage) {\r\n        return {\r\n            table: this.changeTable_tableName_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n            partition: this.changeTable_partitionKey_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n            row: this.changeTable_rowKey_fromQueueTrigger\r\n                .replace(/\\{containerName\\}/g, queueTrigger.containerName)\r\n                .replace(/\\{blobName\\}/g, queueTrigger.blobName),\r\n        };\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/data-patterns/lookup-lsc/src-config/server-config.ts","import { ClientConfig } from \"@told/stack/src/data-patterns/lookup-lsc/src-config/client-config\";\r\n\r\nexport const clientConfig = new ClientConfig({\r\n    lookup_domain: 'https://told-stack-demo.azurewebsites.net',\r\n    lookup_route: 'api/lookup-lsc',\r\n    downloadBlob_domain: 'https://told-stack-demo.azurewebsites.net',\r\n    downloadBlob_route: 'api/lookup-lsc-download'\r\n});\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./../src-client/config/config-lookup-lsc.ts","import { HttpFunctionRequest } from \"../../../core/types/functions\";\r\n\r\nexport interface DataKey {\r\n    containerName: string;\r\n    blobName: string;\r\n}\r\n\r\nexport interface LookupData {\r\n    timeKey: string\r\n};\r\n\r\nexport interface ClientConfigType {\r\n    timePollSeconds: number;\r\n    maxPollCount: number;\r\n\r\n    getLookupUrl(key: DataKey): string;\r\n    getDataDownloadUrl(key: DataKey, lookup: LookupData): string;\r\n}\r\n\r\nexport interface ClientConfigOptions {\r\n    timePollSeconds: number;\r\n    maxPollCount: number;\r\n    lookup_domain: string;\r\n    lookup_route: string;\r\n    downloadBlob_domain: string;\r\n    downloadBlob_route: string;\r\n}\r\n\r\nexport class ClientConfig implements ClientConfigType, ClientConfigOptions {\r\n    timePollSeconds = 1;\r\n    maxPollCount = 5;\r\n\r\n    lookup_domain = '/';\r\n    lookup_route = 'api/lookup-lsc';\r\n    downloadBlob_domain = '/';\r\n    downloadBlob_route = 'blob';\r\n\r\n    constructor(options?: Partial<ClientConfigOptions>) {\r\n        Object.assign(this, options);\r\n    }\r\n\r\n    getLookupUrl(key: DataKey): string {\r\n        return `${this.lookup_domain}/${this.lookup_route}/${key.containerName}/${key.blobName}`;\r\n    }\r\n\r\n    getDataDownloadUrl(key: DataKey, lookup: LookupData): string {\r\n        return `${this.downloadBlob_domain}/${this.downloadBlob_route ? this.downloadBlob_route + '/' : ''}${key.containerName}/${this.getDataDownloadBlobName(key.blobName, lookup)}`;\r\n    }\r\n\r\n    getDataDownloadBlobName(blobName: string, lookup: LookupData) {\r\n        // TODO: Test if works with .ext and switch to underscore if needed\r\n        return `${blobName}/${lookup.timeKey}.gzip`;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/data-patterns/lookup-lsc/src-config/client-config.ts","import { HttpFunction_Config, HttpFunction_TemplateConfig, InputBlobData, HttpFunction_BindingData } from \"../src-config/config\";\r\nimport { HttpFunctionResponse, HttpFunctionRequest } from \"../../../core/types/functions\";\r\n\r\n// Http Request: Handle Update Request\r\n// Blob In: Read Old Lookup Blob Value\r\n// Queue Out: Update Request Queue\r\n// Http Response: Return Old Lookup Value with Short TTL\r\n\r\nexport function createFunctionJson(config: HttpFunction_TemplateConfig) {\r\n    return {\r\n        bindings: [\r\n            {\r\n                name: \"req\",\r\n                type: \"httpTrigger\",\r\n                direction: \"in\",\r\n                authLevel: \"anonymous\",\r\n                route: config.http_route\r\n            },\r\n            {\r\n                name: \"res\",\r\n                type: \"http\",\r\n                direction: \"out\"\r\n            },\r\n            {\r\n                name: \"inInputBlob\",\r\n                type: \"blob\",\r\n                direction: \"in\",\r\n                path: config.inputBlob_path,\r\n                connection: config.inputBlob_connection\r\n            },\r\n        ],\r\n        disabled: false\r\n    };\r\n}\r\n\r\nexport function runFunction(config: HttpFunction_Config, context: {\r\n    log: typeof console.log,\r\n    done: () => void,\r\n    res: HttpFunctionResponse,\r\n    bindingData: HttpFunction_BindingData,\r\n    bindings: {\r\n        inInputBlob: InputBlobData,\r\n    }\r\n}, req: HttpFunctionRequest) {\r\n    const data = context.bindings.inInputBlob;\r\n    context.res = {\r\n        body: data,\r\n        headers: {\r\n            'Content-Type': config.responseOptions.contentType || 'application/json',\r\n            'Content-Encoding': config.responseOptions.contentEncoding || undefined,\r\n            'Cache-Control': config.responseOptions.cacheControl || undefined,\r\n        }\r\n    };\r\n    context.done();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/data-patterns/http-input-blob/src-server/function-01-http.ts","\nimport { runFunction } from '@told/stack/src/data-patterns/lookup-lsc/src-server/function-04-http-download-blob';\nimport { config } from '../../config/config-lookup-lsc';\n\nconst run = function (...args: any[]) {\n    runFunction.apply(null, [config, ...args]);\n};\n\ndeclare const global: any;\nglobal.__run = run;\nmodule.exports = global.__run;\n\n\n\n// WEBPACK FOOTER //\n// ./_intermediate/entries/lookup-lsc-04-http-download-blob.ts","import { createFunctionJson as createFunctionJson_inner, runFunction as runFunction_inner } from \"../../http-input-blob/src-server/function-01-http\";\r\nimport { ServerConfig, FunctionTemplateConfig } from \"../src-config/server-config\";\r\nimport { HttpFunctionRequest } from \"../../../core/types/functions\";\r\n\r\nexport function createFunctionJson(config: FunctionTemplateConfig) {\r\n    return createFunctionJson_inner({\r\n        http_route: config.http_dataDownload_route,\r\n        inputBlob_connection: config.dataDownloadBlob_connection,\r\n        inputBlob_path: config.dataDownloadBlob_path_from_http_dataDownload_route,\r\n    });\r\n}\r\n\r\nexport async function runFunction(config: ServerConfig, context: any, req: HttpFunctionRequest) {\r\n    return runFunction_inner({\r\n        responseOptions: {\r\n            cacheControl: 'public, max-age: ' + (config.timeToLiveSeconds * 4),\r\n            contentEncoding: 'gzip',\r\n            contentType: 'application/json',\r\n        }\r\n    }, context, req);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./../../../told-stack-npm/src/data-patterns/lookup-lsc/src-server/function-04-http-download-blob.ts"],"sourceRoot":""}